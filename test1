// src/app/stores/store-factory.ts
import { signalStore, withState, signalStoreFeature, type SignalStoreFeature } from '@ngrx/signals';
import { withDevtoolsAuto } from '../devtools/with-devtools-auto.feature';

export function createSignalFeatureStore<State extends object>(
  name: string,
  initial: State,
  ...features: SignalStoreFeature[]
) {
  // Compose all the optional features into ONE feature.
  const bundled = features.length ? signalStoreFeature(...features) : null;

  if (bundled) {
    // No dynamic spreads into signalStore — just pass the bundle.
    return signalStore(
      { providedIn: 'root' },
      withState(initial),                     // must come first
      withDevtoolsAuto<State>(name, initial), // second
      bundled                                 // the rest, composed
    );
  } else {
    // No extras — simplest call, no spreads beyond the fixed args.
    return signalStore(
      { providedIn: 'root' },
      withState(initial),
      withDevtoolsAuto<State>(name, initial)
    );
  }
}
